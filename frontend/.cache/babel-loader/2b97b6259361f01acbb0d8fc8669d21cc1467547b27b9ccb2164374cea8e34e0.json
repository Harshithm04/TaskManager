{"ast":null,"code":"var _jsxFileName = \"C:\\\\Desktop\\\\taskmanager-frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport api from '../api/axiosConfig';\nimport { useNavigate } from 'react-router-dom';\n\n// Keys for localStorage\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ACCESS_TOKEN_KEY = 'tm_access';\nconst REFRESH_TOKEN_KEY = 'tm_refresh';\nconst USER_KEY = 'tm_user'; // we’ll store { username, user_id }\n\nconst AuthContext = /*#__PURE__*/createContext();\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const navigate = useNavigate();\n  const [accessToken, _setAccessToken] = useState(localStorage.getItem(ACCESS_TOKEN_KEY));\n  const [refreshToken, setRefreshToken] = useState(localStorage.getItem(REFRESH_TOKEN_KEY));\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(USER_KEY)) || null);\n\n  // Set access token both in state and localStorage\n  const setAccessToken = token => {\n    _setAccessToken(token);\n    if (token) localStorage.setItem(ACCESS_TOKEN_KEY, token);else localStorage.removeItem(ACCESS_TOKEN_KEY);\n  };\n\n  // Login: save tokens and fetch user info if needed\n  const login = ({\n    access,\n    refresh,\n    userData\n  }) => {\n    setAccessToken(access);\n    setRefreshToken(refresh);\n    localStorage.setItem(REFRESH_TOKEN_KEY, refresh);\n    if (userData) {\n      setUser(userData);\n      localStorage.setItem(USER_KEY, JSON.stringify(userData));\n    }\n    navigate('/dashboard');\n  };\n\n  // Logout: clear everything and redirect to login\n  const logout = () => {\n    setAccessToken(null);\n    setRefreshToken(null);\n    setUser(null);\n    localStorage.removeItem(REFRESH_TOKEN_KEY);\n    localStorage.removeItem(USER_KEY);\n    navigate('/login');\n  };\n\n  // Helper to register user context functions to be used outside hooks\n  useEffect(() => {\n    // Expose helpers for axios interceptors\n    window.tmAuth = {\n      getAccessToken: () => accessToken,\n      getRefreshToken: () => refreshToken,\n      setAccessToken,\n      logout\n    };\n  }, [accessToken, refreshToken]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      accessToken,\n      refreshToken,\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n// Custom hook to consume AuthContext\n_s(AuthProvider, \"tMbndoPQ+ym7dwgOo32G6kmJy0w=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  return useContext(AuthContext);\n}\n\n// These are for axiosConfig.js to import:\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function getAccessToken() {\n  var _window$tmAuth;\n  return (_window$tmAuth = window.tmAuth) === null || _window$tmAuth === void 0 ? void 0 : _window$tmAuth.getAccessToken();\n}\nexport function getRefreshToken() {\n  var _window$tmAuth2;\n  return (_window$tmAuth2 = window.tmAuth) === null || _window$tmAuth2 === void 0 ? void 0 : _window$tmAuth2.getRefreshToken();\n}\nexport function setAccessToken(token) {\n  var _window$tmAuth3;\n  (_window$tmAuth3 = window.tmAuth) === null || _window$tmAuth3 === void 0 ? void 0 : _window$tmAuth3.setAccessToken(token);\n}\nexport function logout() {\n  var _window$tmAuth4;\n  (_window$tmAuth4 = window.tmAuth) === null || _window$tmAuth4 === void 0 ? void 0 : _window$tmAuth4.logout();\n}\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","useNavigate","jsxDEV","_jsxDEV","ACCESS_TOKEN_KEY","REFRESH_TOKEN_KEY","USER_KEY","AuthContext","AuthProvider","children","_s","navigate","accessToken","_setAccessToken","localStorage","getItem","refreshToken","setRefreshToken","user","setUser","JSON","parse","setAccessToken","token","setItem","removeItem","login","access","refresh","userData","stringify","logout","window","tmAuth","getAccessToken","getRefreshToken","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","_window$tmAuth","_window$tmAuth2","_window$tmAuth3","_window$tmAuth4","$RefreshReg$"],"sources":["C:/Desktop/taskmanager-frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport api from '../api/axiosConfig';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n// Keys for localStorage\r\nconst ACCESS_TOKEN_KEY = 'tm_access';\r\nconst REFRESH_TOKEN_KEY = 'tm_refresh';\r\nconst USER_KEY = 'tm_user'; // we’ll store { username, user_id }\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport function AuthProvider({ children }) {\r\n  const navigate = useNavigate();\r\n  const [accessToken, _setAccessToken] = useState(localStorage.getItem(ACCESS_TOKEN_KEY));\r\n  const [refreshToken, setRefreshToken] = useState(localStorage.getItem(REFRESH_TOKEN_KEY));\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(USER_KEY)) || null);\r\n\r\n  // Set access token both in state and localStorage\r\n  const setAccessToken = (token) => {\r\n    _setAccessToken(token);\r\n    if (token) localStorage.setItem(ACCESS_TOKEN_KEY, token);\r\n    else localStorage.removeItem(ACCESS_TOKEN_KEY);\r\n  };\r\n\r\n  // Login: save tokens and fetch user info if needed\r\n  const login = ({ access, refresh, userData }) => {\r\n    setAccessToken(access);\r\n    setRefreshToken(refresh);\r\n    localStorage.setItem(REFRESH_TOKEN_KEY, refresh);\r\n\r\n    if (userData) {\r\n      setUser(userData);\r\n      localStorage.setItem(USER_KEY, JSON.stringify(userData));\r\n    }\r\n    navigate('/dashboard');\r\n  };\r\n\r\n  // Logout: clear everything and redirect to login\r\n  const logout = () => {\r\n    setAccessToken(null);\r\n    setRefreshToken(null);\r\n    setUser(null);\r\n    localStorage.removeItem(REFRESH_TOKEN_KEY);\r\n    localStorage.removeItem(USER_KEY);\r\n    navigate('/login');\r\n  };\r\n\r\n  // Helper to register user context functions to be used outside hooks\r\n  useEffect(() => {\r\n    // Expose helpers for axios interceptors\r\n    window.tmAuth = {\r\n      getAccessToken: () => accessToken,\r\n      getRefreshToken: () => refreshToken,\r\n      setAccessToken,\r\n      logout,\r\n    };\r\n  }, [accessToken, refreshToken]);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ accessToken, refreshToken, user, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\n// Custom hook to consume AuthContext\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\n// These are for axiosConfig.js to import:\r\nexport function getAccessToken() {\r\n  return window.tmAuth?.getAccessToken();\r\n}\r\n\r\nexport function getRefreshToken() {\r\n  return window.tmAuth?.getRefreshToken();\r\n}\r\n\r\nexport function setAccessToken(token) {\r\n  window.tmAuth?.setAccessToken(token);\r\n}\r\n\r\nexport function logout() {\r\n  window.tmAuth?.logout();\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,OAAOC,GAAG,MAAM,oBAAoB;AACpC,SAASC,WAAW,QAAQ,kBAAkB;;AAE9C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,gBAAgB,GAAG,WAAW;AACpC,MAAMC,iBAAiB,GAAG,YAAY;AACtC,MAAMC,QAAQ,GAAG,SAAS,CAAC,CAAC;;AAE5B,MAAMC,WAAW,gBAAGX,aAAa,CAAC,CAAC;AAEnC,OAAO,SAASY,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACzC,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACW,WAAW,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAACgB,YAAY,CAACC,OAAO,CAACX,gBAAgB,CAAC,CAAC;EACvF,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAACgB,YAAY,CAACC,OAAO,CAACV,iBAAiB,CAAC,CAAC;EACzF,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGrB,QAAQ,CAACsB,IAAI,CAACC,KAAK,CAACP,YAAY,CAACC,OAAO,CAACT,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC;;EAEpF;EACA,MAAMgB,cAAc,GAAIC,KAAK,IAAK;IAChCV,eAAe,CAACU,KAAK,CAAC;IACtB,IAAIA,KAAK,EAAET,YAAY,CAACU,OAAO,CAACpB,gBAAgB,EAAEmB,KAAK,CAAC,CAAC,KACpDT,YAAY,CAACW,UAAU,CAACrB,gBAAgB,CAAC;EAChD,CAAC;;EAED;EACA,MAAMsB,KAAK,GAAGA,CAAC;IAAEC,MAAM;IAAEC,OAAO;IAAEC;EAAS,CAAC,KAAK;IAC/CP,cAAc,CAACK,MAAM,CAAC;IACtBV,eAAe,CAACW,OAAO,CAAC;IACxBd,YAAY,CAACU,OAAO,CAACnB,iBAAiB,EAAEuB,OAAO,CAAC;IAEhD,IAAIC,QAAQ,EAAE;MACZV,OAAO,CAACU,QAAQ,CAAC;MACjBf,YAAY,CAACU,OAAO,CAAClB,QAAQ,EAAEc,IAAI,CAACU,SAAS,CAACD,QAAQ,CAAC,CAAC;IAC1D;IACAlB,QAAQ,CAAC,YAAY,CAAC;EACxB,CAAC;;EAED;EACA,MAAMoB,MAAM,GAAGA,CAAA,KAAM;IACnBT,cAAc,CAAC,IAAI,CAAC;IACpBL,eAAe,CAAC,IAAI,CAAC;IACrBE,OAAO,CAAC,IAAI,CAAC;IACbL,YAAY,CAACW,UAAU,CAACpB,iBAAiB,CAAC;IAC1CS,YAAY,CAACW,UAAU,CAACnB,QAAQ,CAAC;IACjCK,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC;;EAED;EACAZ,SAAS,CAAC,MAAM;IACd;IACAiC,MAAM,CAACC,MAAM,GAAG;MACdC,cAAc,EAAEA,CAAA,KAAMtB,WAAW;MACjCuB,eAAe,EAAEA,CAAA,KAAMnB,YAAY;MACnCM,cAAc;MACdS;IACF,CAAC;EACH,CAAC,EAAE,CAACnB,WAAW,EAAEI,YAAY,CAAC,CAAC;EAE/B,oBACEb,OAAA,CAACI,WAAW,CAAC6B,QAAQ;IAACC,KAAK,EAAE;MAAEzB,WAAW;MAAEI,YAAY;MAAEE,IAAI;MAAEQ,KAAK;MAAEK;IAAO,CAAE;IAAAtB,QAAA,EAC7EA;EAAQ;IAAA6B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;;AAEA;AAAA/B,EAAA,CAtDgBF,YAAY;EAAA,QACTP,WAAW;AAAA;AAAAyC,EAAA,GADdlC,YAAY;AAuD5B,OAAO,SAASmC,OAAOA,CAAA,EAAG;EAAAC,GAAA;EACxB,OAAO/C,UAAU,CAACU,WAAW,CAAC;AAChC;;AAEA;AAAAqC,GAAA,CAJgBD,OAAO;AAKvB,OAAO,SAAST,cAAcA,CAAA,EAAG;EAAA,IAAAW,cAAA;EAC/B,QAAAA,cAAA,GAAOb,MAAM,CAACC,MAAM,cAAAY,cAAA,uBAAbA,cAAA,CAAeX,cAAc,CAAC,CAAC;AACxC;AAEA,OAAO,SAASC,eAAeA,CAAA,EAAG;EAAA,IAAAW,eAAA;EAChC,QAAAA,eAAA,GAAOd,MAAM,CAACC,MAAM,cAAAa,eAAA,uBAAbA,eAAA,CAAeX,eAAe,CAAC,CAAC;AACzC;AAEA,OAAO,SAASb,cAAcA,CAACC,KAAK,EAAE;EAAA,IAAAwB,eAAA;EACpC,CAAAA,eAAA,GAAAf,MAAM,CAACC,MAAM,cAAAc,eAAA,uBAAbA,eAAA,CAAezB,cAAc,CAACC,KAAK,CAAC;AACtC;AAEA,OAAO,SAASQ,MAAMA,CAAA,EAAG;EAAA,IAAAiB,eAAA;EACvB,CAAAA,eAAA,GAAAhB,MAAM,CAACC,MAAM,cAAAe,eAAA,uBAAbA,eAAA,CAAejB,MAAM,CAAC,CAAC;AACzB;AAAC,IAAAW,EAAA;AAAAO,YAAA,CAAAP,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}